
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800200  000008e6  0000097a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080021a  0080021a  00000994  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000994  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000145e  00000000  00000000  00000a80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f2a  00000000  00000000  00001ede  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000528  00000000  00000000  00002e08  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  00003330  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000810  00000000  00000000  00003450  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000398  00000000  00000000  00003c60  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00003ff8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  20:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  54:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  58:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  5c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  60:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  64:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  68:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  6c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  70:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  74:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  78:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  7c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  80:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  84:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  88:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  8c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  90:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  94:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  98:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  9c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  a0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  a4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  a8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  ac:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  b0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  b4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  b8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  bc:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  c0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  c4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  c8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  cc:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  d0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  d4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  d8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  dc:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  e0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61

000000f0 <__do_copy_data>:
  f0:	12 e0       	ldi	r17, 0x02	; 2
  f2:	a0 e0       	ldi	r26, 0x00	; 0
  f4:	b2 e0       	ldi	r27, 0x02	; 2
  f6:	e6 ee       	ldi	r30, 0xE6	; 230
  f8:	f8 e0       	ldi	r31, 0x08	; 8
  fa:	02 c0       	rjmp	.+4      	; 0x100 <__do_copy_data+0x10>
  fc:	05 90       	lpm	r0, Z+
  fe:	0d 92       	st	X+, r0
 100:	aa 31       	cpi	r26, 0x1A	; 26
 102:	b1 07       	cpc	r27, r17
 104:	d9 f7       	brne	.-10     	; 0xfc <__do_copy_data+0xc>

00000106 <__do_clear_bss>:
 106:	22 e0       	ldi	r18, 0x02	; 2
 108:	aa e1       	ldi	r26, 0x1A	; 26
 10a:	b2 e0       	ldi	r27, 0x02	; 2
 10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
 10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
 110:	a0 32       	cpi	r26, 0x20	; 32
 112:	b2 07       	cpc	r27, r18
 114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
 116:	0e 94 31 01 	call	0x262	; 0x262 <main>
 11a:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <_exit>

0000011e <__bad_interrupt>:
 11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <_ZN7DoCycleD1Ev>:
#define IEXECUTABLE_H

class IExecutable {
	public:
	virtual void doExec(int cycle_counter) = 0; // Pure virtual function
	virtual ~IExecutable() throw() = default; // Virtual destructor for proper cleanup
 122:	2a e0       	ldi	r18, 0x0A	; 10
 124:	32 e0       	ldi	r19, 0x02	; 2
 126:	fc 01       	movw	r30, r24
 128:	31 83       	std	Z+1, r19	; 0x01
 12a:	20 83       	st	Z, r18
 12c:	08 95       	ret

0000012e <_ZN7DoCycleD0Ev>:
 12e:	2a e0       	ldi	r18, 0x0A	; 10
 130:	32 e0       	ldi	r19, 0x02	; 2
 132:	fc 01       	movw	r30, r24
 134:	31 83       	std	Z+1, r19	; 0x01
 136:	20 83       	st	Z, r18
#define DOCYCLE_H

#include <stdint.h>
#include "IExecutable.h"

class DoCycle : public IExecutable {
 138:	68 e0       	ldi	r22, 0x08	; 8
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	0e 94 2d 01 	call	0x25a	; 0x25a <_ZdlPvj>
 140:	08 95       	ret

00000142 <_Z8ADC_Readh>:
#include <avr\io.h>
#include "docycle.h"

uint16_t ADC_Read(uint8_t channel) {
	// Select ADC channel (clear MUX bits first)
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);
 142:	ec e7       	ldi	r30, 0x7C	; 124
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	90 81       	ld	r25, Z
 148:	90 7f       	andi	r25, 0xF0	; 240
 14a:	8f 70       	andi	r24, 0x0F	; 15
 14c:	89 2b       	or	r24, r25
 14e:	80 83       	st	Z, r24

	// Start conversion
	ADCSRA |= (1 << ADSC);
 150:	ea e7       	ldi	r30, 0x7A	; 122
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	80 64       	ori	r24, 0x40	; 64
 158:	80 83       	st	Z, r24

	// Wait for conversion to complete
	while (ADCSRA & (1 << ADSC));
 15a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f007a>
 15e:	86 fd       	sbrc	r24, 6
 160:	fc cf       	rjmp	.-8      	; 0x15a <_Z8ADC_Readh+0x18>

	// Return 10-bit ADC result
	return ADC;
 162:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f0078>
 166:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f0079>
}
 16a:	08 95       	ret

0000016c <_ZN7DoCycle6doExecEi>:
	mcycle_duration(cycle_duration) 
{}
	

	
void DoCycle::doExec(int cycle_counter) {
 16c:	8f 92       	push	r8
 16e:	9f 92       	push	r9
 170:	af 92       	push	r10
 172:	bf 92       	push	r11
 174:	cf 92       	push	r12
 176:	df 92       	push	r13
 178:	ef 92       	push	r14
 17a:	ff 92       	push	r15
 17c:	0f 93       	push	r16
 17e:	1f 93       	push	r17
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
 184:	ec 01       	movw	r28, r24
 186:	7b 01       	movw	r14, r22
	uint16_t adc_value = ADC_Read(minput_pin);
 188:	8a 81       	ldd	r24, Y+2	; 0x02
 18a:	0e 94 a1 00 	call	0x142	; 0x142 <_Z8ADC_Readh>
	float cycle_divider = static_cast<float>(adc_value) / 1023.0f;
 18e:	bc 01       	movw	r22, r24
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 09 02 	call	0x412	; 0x412 <__floatunsisf>
 198:	20 e0       	ldi	r18, 0x00	; 0
 19a:	30 ec       	ldi	r19, 0xC0	; 192
 19c:	4f e7       	ldi	r20, 0x7F	; 127
 19e:	54 e4       	ldi	r21, 0x44	; 68
 1a0:	0e 94 97 01 	call	0x32e	; 0x32e <__divsf3>
 1a4:	4b 01       	movw	r8, r22
 1a6:	5c 01       	movw	r10, r24

	if ((cycle_counter % mcycle_duration) < (mcycle_duration * cycle_divider)) {
 1a8:	0e 81       	ldd	r16, Y+6	; 0x06
 1aa:	1f 81       	ldd	r17, Y+7	; 0x07
 1ac:	c7 01       	movw	r24, r14
 1ae:	b8 01       	movw	r22, r16
 1b0:	0e 94 28 03 	call	0x650	; 0x650 <__divmodhi4>
 1b4:	bc 01       	movw	r22, r24
 1b6:	99 0f       	add	r25, r25
 1b8:	88 0b       	sbc	r24, r24
 1ba:	99 0b       	sbc	r25, r25
 1bc:	0e 94 0b 02 	call	0x416	; 0x416 <__floatsisf>
 1c0:	6b 01       	movw	r12, r22
 1c2:	7c 01       	movw	r14, r24
 1c4:	b8 01       	movw	r22, r16
 1c6:	11 0f       	add	r17, r17
 1c8:	88 0b       	sbc	r24, r24
 1ca:	99 0b       	sbc	r25, r25
 1cc:	0e 94 0b 02 	call	0x416	; 0x416 <__floatsisf>
 1d0:	a5 01       	movw	r20, r10
 1d2:	94 01       	movw	r18, r8
 1d4:	0e 94 bb 02 	call	0x576	; 0x576 <__mulsf3>
 1d8:	9b 01       	movw	r18, r22
 1da:	ac 01       	movw	r20, r24
 1dc:	c7 01       	movw	r24, r14
 1de:	b6 01       	movw	r22, r12
 1e0:	0e 94 92 01 	call	0x324	; 0x324 <__cmpsf2>
 1e4:	88 23       	and	r24, r24
 1e6:	74 f4       	brge	.+28     	; 0x204 <_ZN7DoCycle6doExecEi+0x98>
		moutput_port |= (1 << moutput_pin);
 1e8:	eb 81       	ldd	r30, Y+3	; 0x03
 1ea:	fc 81       	ldd	r31, Y+4	; 0x04
 1ec:	20 81       	ld	r18, Z
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	0d 80       	ldd	r0, Y+5	; 0x05
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <_ZN7DoCycle6doExecEi+0x8e>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	0a 94       	dec	r0
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <_ZN7DoCycle6doExecEi+0x8a>
 1fe:	82 2b       	or	r24, r18
 200:	80 83       	st	Z, r24
 202:	0e c0       	rjmp	.+28     	; 0x220 <_ZN7DoCycle6doExecEi+0xb4>
		} else {
		moutput_port &= ~(1 << moutput_pin);
 204:	eb 81       	ldd	r30, Y+3	; 0x03
 206:	fc 81       	ldd	r31, Y+4	; 0x04
 208:	20 81       	ld	r18, Z
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	0d 80       	ldd	r0, Y+5	; 0x05
 210:	02 c0       	rjmp	.+4      	; 0x216 <_ZN7DoCycle6doExecEi+0xaa>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	0a 94       	dec	r0
 218:	e2 f7       	brpl	.-8      	; 0x212 <_ZN7DoCycle6doExecEi+0xa6>
 21a:	80 95       	com	r24
 21c:	82 23       	and	r24, r18
 21e:	80 83       	st	Z, r24
	}
	
}
 220:	df 91       	pop	r29
 222:	cf 91       	pop	r28
 224:	1f 91       	pop	r17
 226:	0f 91       	pop	r16
 228:	ff 90       	pop	r15
 22a:	ef 90       	pop	r14
 22c:	df 90       	pop	r13
 22e:	cf 90       	pop	r12
 230:	bf 90       	pop	r11
 232:	af 90       	pop	r10
 234:	9f 90       	pop	r9
 236:	8f 90       	pop	r8
 238:	08 95       	ret

0000023a <_ZN7DoCycleC1EhRVhhi>:
}




DoCycle::DoCycle(uint8_t input_pin, volatile uint8_t &output_port, uint8_t output_pin, int cycle_duration)
 23a:	0f 93       	push	r16
 23c:	1f 93       	push	r17
 23e:	fc 01       	movw	r30, r24
: 
	minput_pin(input_pin), 
	moutput_port(output_port), 
	moutput_pin(output_pin), 
	mcycle_duration(cycle_duration) 
 240:	84 e1       	ldi	r24, 0x14	; 20
 242:	92 e0       	ldi	r25, 0x02	; 2
 244:	91 83       	std	Z+1, r25	; 0x01
 246:	80 83       	st	Z, r24
 248:	62 83       	std	Z+2, r22	; 0x02
 24a:	54 83       	std	Z+4, r21	; 0x04
 24c:	43 83       	std	Z+3, r20	; 0x03
 24e:	25 83       	std	Z+5, r18	; 0x05
 250:	17 83       	std	Z+7, r17	; 0x07
 252:	06 83       	std	Z+6, r16	; 0x06
{}
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	08 95       	ret

0000025a <_ZdlPvj>:
uint16_t cycle_counter=0;



void variable_delay_ms(int ms) {
 for (int i = 0; i < ms; i++) {
 25a:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <free>
 25e:	08 95       	ret

00000260 <__cxa_pure_virtual>:
 260:	ff cf       	rjmp	.-2      	; 0x260 <__cxa_pure_virtual>

00000262 <main>:





int main(void) {
 262:	cf 93       	push	r28
 264:	df 93       	push	r29
 266:	cd b7       	in	r28, 0x3d	; 61
 268:	de b7       	in	r29, 0x3e	; 62
 26a:	68 97       	sbiw	r28, 0x18	; 24
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
	DDRB |= (1 << PB0);
 276:	84 b1       	in	r24, 0x04	; 4
 278:	81 60       	ori	r24, 0x01	; 1
 27a:	84 b9       	out	0x04, r24	; 4
	DDRF &= ~(1 << PF0);
 27c:	80 b3       	in	r24, 0x10	; 16
 27e:	8e 7f       	andi	r24, 0xFE	; 254
 280:	80 bb       	out	0x10, r24	; 16
	DDRB |= (1 << PB1);
 282:	84 b1       	in	r24, 0x04	; 4
 284:	82 60       	ori	r24, 0x02	; 2
 286:	84 b9       	out	0x04, r24	; 4
	DDRF &= ~(1 << PF1);
 288:	80 b3       	in	r24, 0x10	; 16
 28a:	8d 7f       	andi	r24, 0xFD	; 253
 28c:	80 bb       	out	0x10, r24	; 16
	DDRB |= (1 << PB2);
 28e:	84 b1       	in	r24, 0x04	; 4
 290:	84 60       	ori	r24, 0x04	; 4
 292:	84 b9       	out	0x04, r24	; 4
	DDRF &= ~(1 << PF2);
 294:	80 b3       	in	r24, 0x10	; 16
 296:	8b 7f       	andi	r24, 0xFB	; 251
 298:	80 bb       	out	0x10, r24	; 16

	ADMUX = (1 << REFS0);
 29a:	80 e4       	ldi	r24, 0x40	; 64
 29c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f007c>
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
 2a0:	87 e8       	ldi	r24, 0x87	; 135
 2a2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f007a>

	// Correct way: instantiate objects
	DoCycle mycycle0(PF0, PORTB, PB0, 20);
 2a6:	04 e1       	ldi	r16, 0x14	; 20
 2a8:	10 e0       	ldi	r17, 0x00	; 0
 2aa:	20 e0       	ldi	r18, 0x00	; 0
 2ac:	45 e2       	ldi	r20, 0x25	; 37
 2ae:	50 e0       	ldi	r21, 0x00	; 0
 2b0:	60 e0       	ldi	r22, 0x00	; 0
 2b2:	ce 01       	movw	r24, r28
 2b4:	01 96       	adiw	r24, 0x01	; 1
 2b6:	0e 94 1d 01 	call	0x23a	; 0x23a <_ZN7DoCycleC1EhRVhhi>
	DoCycle mycycle1(PF1, PORTB, PB1, 20);
 2ba:	21 e0       	ldi	r18, 0x01	; 1
 2bc:	45 e2       	ldi	r20, 0x25	; 37
 2be:	50 e0       	ldi	r21, 0x00	; 0
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	ce 01       	movw	r24, r28
 2c4:	09 96       	adiw	r24, 0x09	; 9
 2c6:	0e 94 1d 01 	call	0x23a	; 0x23a <_ZN7DoCycleC1EhRVhhi>
	DoCycle mycycle2(PF2, PORTB, PB2, 20);
 2ca:	22 e0       	ldi	r18, 0x02	; 2
 2cc:	45 e2       	ldi	r20, 0x25	; 37
 2ce:	50 e0       	ldi	r21, 0x00	; 0
 2d0:	62 e0       	ldi	r22, 0x02	; 2
 2d2:	ce 01       	movw	r24, r28
 2d4:	41 96       	adiw	r24, 0x11	; 17
 2d6:	0e 94 1d 01 	call	0x23a	; 0x23a <_ZN7DoCycleC1EhRVhhi>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2da:	8f e9       	ldi	r24, 0x9F	; 159
 2dc:	9f e0       	ldi	r25, 0x0F	; 15
 2de:	01 97       	sbiw	r24, 0x01	; 1
 2e0:	f1 f7       	brne	.-4      	; 0x2de <main+0x7c>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <main+0x82>
 2e4:	00 00       	nop

	while (1) {
		_delay_ms(1);
		cycle_counter++;
 2e6:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <__data_end>
 2ea:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <__data_end+0x1>
 2ee:	6f 5f       	subi	r22, 0xFF	; 255
 2f0:	7f 4f       	sbci	r23, 0xFF	; 255
 2f2:	70 93 1b 02 	sts	0x021B, r23	; 0x80021b <__data_end+0x1>
 2f6:	60 93 1a 02 	sts	0x021A, r22	; 0x80021a <__data_end>
		mycycle0.doExec(cycle_counter);
 2fa:	ce 01       	movw	r24, r28
 2fc:	01 96       	adiw	r24, 0x01	; 1
 2fe:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN7DoCycle6doExecEi>
		mycycle1.doExec(cycle_counter);
 302:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <__data_end>
 306:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <__data_end+0x1>
 30a:	ce 01       	movw	r24, r28
 30c:	09 96       	adiw	r24, 0x09	; 9
 30e:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN7DoCycle6doExecEi>
		mycycle2.doExec(cycle_counter);
 312:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <__data_end>
 316:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <__data_end+0x1>
 31a:	ce 01       	movw	r24, r28
 31c:	41 96       	adiw	r24, 0x11	; 17
 31e:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN7DoCycle6doExecEi>
 322:	db cf       	rjmp	.-74     	; 0x2da <main+0x78>

00000324 <__cmpsf2>:
 324:	0e 94 46 02 	call	0x48c	; 0x48c <__fp_cmp>
 328:	08 f4       	brcc	.+2      	; 0x32c <__cmpsf2+0x8>
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	08 95       	ret

0000032e <__divsf3>:
 32e:	0e 94 ab 01 	call	0x356	; 0x356 <__divsf3x>
 332:	0c 94 81 02 	jmp	0x502	; 0x502 <__fp_round>
 336:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <__fp_pscB>
 33a:	58 f0       	brcs	.+22     	; 0x352 <__divsf3+0x24>
 33c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <__fp_pscA>
 340:	40 f0       	brcs	.+16     	; 0x352 <__divsf3+0x24>
 342:	29 f4       	brne	.+10     	; 0x34e <__divsf3+0x20>
 344:	5f 3f       	cpi	r21, 0xFF	; 255
 346:	29 f0       	breq	.+10     	; 0x352 <__divsf3+0x24>
 348:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_inf>
 34c:	51 11       	cpse	r21, r1
 34e:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_szero>
 352:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__fp_nan>

00000356 <__divsf3x>:
 356:	0e 94 92 02 	call	0x524	; 0x524 <__fp_split3>
 35a:	68 f3       	brcs	.-38     	; 0x336 <__divsf3+0x8>

0000035c <__divsf3_pse>:
 35c:	99 23       	and	r25, r25
 35e:	b1 f3       	breq	.-20     	; 0x34c <__divsf3+0x1e>
 360:	55 23       	and	r21, r21
 362:	91 f3       	breq	.-28     	; 0x348 <__divsf3+0x1a>
 364:	95 1b       	sub	r25, r21
 366:	55 0b       	sbc	r21, r21
 368:	bb 27       	eor	r27, r27
 36a:	aa 27       	eor	r26, r26
 36c:	62 17       	cp	r22, r18
 36e:	73 07       	cpc	r23, r19
 370:	84 07       	cpc	r24, r20
 372:	38 f0       	brcs	.+14     	; 0x382 <__divsf3_pse+0x26>
 374:	9f 5f       	subi	r25, 0xFF	; 255
 376:	5f 4f       	sbci	r21, 0xFF	; 255
 378:	22 0f       	add	r18, r18
 37a:	33 1f       	adc	r19, r19
 37c:	44 1f       	adc	r20, r20
 37e:	aa 1f       	adc	r26, r26
 380:	a9 f3       	breq	.-22     	; 0x36c <__divsf3_pse+0x10>
 382:	35 d0       	rcall	.+106    	; 0x3ee <__divsf3_pse+0x92>
 384:	0e 2e       	mov	r0, r30
 386:	3a f0       	brmi	.+14     	; 0x396 <__divsf3_pse+0x3a>
 388:	e0 e8       	ldi	r30, 0x80	; 128
 38a:	32 d0       	rcall	.+100    	; 0x3f0 <__divsf3_pse+0x94>
 38c:	91 50       	subi	r25, 0x01	; 1
 38e:	50 40       	sbci	r21, 0x00	; 0
 390:	e6 95       	lsr	r30
 392:	00 1c       	adc	r0, r0
 394:	ca f7       	brpl	.-14     	; 0x388 <__divsf3_pse+0x2c>
 396:	2b d0       	rcall	.+86     	; 0x3ee <__divsf3_pse+0x92>
 398:	fe 2f       	mov	r31, r30
 39a:	29 d0       	rcall	.+82     	; 0x3ee <__divsf3_pse+0x92>
 39c:	66 0f       	add	r22, r22
 39e:	77 1f       	adc	r23, r23
 3a0:	88 1f       	adc	r24, r24
 3a2:	bb 1f       	adc	r27, r27
 3a4:	26 17       	cp	r18, r22
 3a6:	37 07       	cpc	r19, r23
 3a8:	48 07       	cpc	r20, r24
 3aa:	ab 07       	cpc	r26, r27
 3ac:	b0 e8       	ldi	r27, 0x80	; 128
 3ae:	09 f0       	breq	.+2      	; 0x3b2 <__divsf3_pse+0x56>
 3b0:	bb 0b       	sbc	r27, r27
 3b2:	80 2d       	mov	r24, r0
 3b4:	bf 01       	movw	r22, r30
 3b6:	ff 27       	eor	r31, r31
 3b8:	93 58       	subi	r25, 0x83	; 131
 3ba:	5f 4f       	sbci	r21, 0xFF	; 255
 3bc:	3a f0       	brmi	.+14     	; 0x3cc <__divsf3_pse+0x70>
 3be:	9e 3f       	cpi	r25, 0xFE	; 254
 3c0:	51 05       	cpc	r21, r1
 3c2:	78 f0       	brcs	.+30     	; 0x3e2 <__divsf3_pse+0x86>
 3c4:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_inf>
 3c8:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_szero>
 3cc:	5f 3f       	cpi	r21, 0xFF	; 255
 3ce:	e4 f3       	brlt	.-8      	; 0x3c8 <__divsf3_pse+0x6c>
 3d0:	98 3e       	cpi	r25, 0xE8	; 232
 3d2:	d4 f3       	brlt	.-12     	; 0x3c8 <__divsf3_pse+0x6c>
 3d4:	86 95       	lsr	r24
 3d6:	77 95       	ror	r23
 3d8:	67 95       	ror	r22
 3da:	b7 95       	ror	r27
 3dc:	f7 95       	ror	r31
 3de:	9f 5f       	subi	r25, 0xFF	; 255
 3e0:	c9 f7       	brne	.-14     	; 0x3d4 <__divsf3_pse+0x78>
 3e2:	88 0f       	add	r24, r24
 3e4:	91 1d       	adc	r25, r1
 3e6:	96 95       	lsr	r25
 3e8:	87 95       	ror	r24
 3ea:	97 f9       	bld	r25, 7
 3ec:	08 95       	ret
 3ee:	e1 e0       	ldi	r30, 0x01	; 1
 3f0:	66 0f       	add	r22, r22
 3f2:	77 1f       	adc	r23, r23
 3f4:	88 1f       	adc	r24, r24
 3f6:	bb 1f       	adc	r27, r27
 3f8:	62 17       	cp	r22, r18
 3fa:	73 07       	cpc	r23, r19
 3fc:	84 07       	cpc	r24, r20
 3fe:	ba 07       	cpc	r27, r26
 400:	20 f0       	brcs	.+8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 402:	62 1b       	sub	r22, r18
 404:	73 0b       	sbc	r23, r19
 406:	84 0b       	sbc	r24, r20
 408:	ba 0b       	sbc	r27, r26
 40a:	ee 1f       	adc	r30, r30
 40c:	88 f7       	brcc	.-30     	; 0x3f0 <__divsf3_pse+0x94>
 40e:	e0 95       	com	r30
 410:	08 95       	ret

00000412 <__floatunsisf>:
 412:	e8 94       	clt
 414:	09 c0       	rjmp	.+18     	; 0x428 <__floatsisf+0x12>

00000416 <__floatsisf>:
 416:	97 fb       	bst	r25, 7
 418:	3e f4       	brtc	.+14     	; 0x428 <__floatsisf+0x12>
 41a:	90 95       	com	r25
 41c:	80 95       	com	r24
 41e:	70 95       	com	r23
 420:	61 95       	neg	r22
 422:	7f 4f       	sbci	r23, 0xFF	; 255
 424:	8f 4f       	sbci	r24, 0xFF	; 255
 426:	9f 4f       	sbci	r25, 0xFF	; 255
 428:	99 23       	and	r25, r25
 42a:	a9 f0       	breq	.+42     	; 0x456 <__floatsisf+0x40>
 42c:	f9 2f       	mov	r31, r25
 42e:	96 e9       	ldi	r25, 0x96	; 150
 430:	bb 27       	eor	r27, r27
 432:	93 95       	inc	r25
 434:	f6 95       	lsr	r31
 436:	87 95       	ror	r24
 438:	77 95       	ror	r23
 43a:	67 95       	ror	r22
 43c:	b7 95       	ror	r27
 43e:	f1 11       	cpse	r31, r1
 440:	f8 cf       	rjmp	.-16     	; 0x432 <__floatsisf+0x1c>
 442:	fa f4       	brpl	.+62     	; 0x482 <__floatsisf+0x6c>
 444:	bb 0f       	add	r27, r27
 446:	11 f4       	brne	.+4      	; 0x44c <__floatsisf+0x36>
 448:	60 ff       	sbrs	r22, 0
 44a:	1b c0       	rjmp	.+54     	; 0x482 <__floatsisf+0x6c>
 44c:	6f 5f       	subi	r22, 0xFF	; 255
 44e:	7f 4f       	sbci	r23, 0xFF	; 255
 450:	8f 4f       	sbci	r24, 0xFF	; 255
 452:	9f 4f       	sbci	r25, 0xFF	; 255
 454:	16 c0       	rjmp	.+44     	; 0x482 <__floatsisf+0x6c>
 456:	88 23       	and	r24, r24
 458:	11 f0       	breq	.+4      	; 0x45e <__floatsisf+0x48>
 45a:	96 e9       	ldi	r25, 0x96	; 150
 45c:	11 c0       	rjmp	.+34     	; 0x480 <__floatsisf+0x6a>
 45e:	77 23       	and	r23, r23
 460:	21 f0       	breq	.+8      	; 0x46a <__floatsisf+0x54>
 462:	9e e8       	ldi	r25, 0x8E	; 142
 464:	87 2f       	mov	r24, r23
 466:	76 2f       	mov	r23, r22
 468:	05 c0       	rjmp	.+10     	; 0x474 <__floatsisf+0x5e>
 46a:	66 23       	and	r22, r22
 46c:	71 f0       	breq	.+28     	; 0x48a <__floatsisf+0x74>
 46e:	96 e8       	ldi	r25, 0x86	; 134
 470:	86 2f       	mov	r24, r22
 472:	70 e0       	ldi	r23, 0x00	; 0
 474:	60 e0       	ldi	r22, 0x00	; 0
 476:	2a f0       	brmi	.+10     	; 0x482 <__floatsisf+0x6c>
 478:	9a 95       	dec	r25
 47a:	66 0f       	add	r22, r22
 47c:	77 1f       	adc	r23, r23
 47e:	88 1f       	adc	r24, r24
 480:	da f7       	brpl	.-10     	; 0x478 <__floatsisf+0x62>
 482:	88 0f       	add	r24, r24
 484:	96 95       	lsr	r25
 486:	87 95       	ror	r24
 488:	97 f9       	bld	r25, 7
 48a:	08 95       	ret

0000048c <__fp_cmp>:
 48c:	99 0f       	add	r25, r25
 48e:	00 08       	sbc	r0, r0
 490:	55 0f       	add	r21, r21
 492:	aa 0b       	sbc	r26, r26
 494:	e0 e8       	ldi	r30, 0x80	; 128
 496:	fe ef       	ldi	r31, 0xFE	; 254
 498:	16 16       	cp	r1, r22
 49a:	17 06       	cpc	r1, r23
 49c:	e8 07       	cpc	r30, r24
 49e:	f9 07       	cpc	r31, r25
 4a0:	c0 f0       	brcs	.+48     	; 0x4d2 <__fp_cmp+0x46>
 4a2:	12 16       	cp	r1, r18
 4a4:	13 06       	cpc	r1, r19
 4a6:	e4 07       	cpc	r30, r20
 4a8:	f5 07       	cpc	r31, r21
 4aa:	98 f0       	brcs	.+38     	; 0x4d2 <__fp_cmp+0x46>
 4ac:	62 1b       	sub	r22, r18
 4ae:	73 0b       	sbc	r23, r19
 4b0:	84 0b       	sbc	r24, r20
 4b2:	95 0b       	sbc	r25, r21
 4b4:	39 f4       	brne	.+14     	; 0x4c4 <__fp_cmp+0x38>
 4b6:	0a 26       	eor	r0, r26
 4b8:	61 f0       	breq	.+24     	; 0x4d2 <__fp_cmp+0x46>
 4ba:	23 2b       	or	r18, r19
 4bc:	24 2b       	or	r18, r20
 4be:	25 2b       	or	r18, r21
 4c0:	21 f4       	brne	.+8      	; 0x4ca <__fp_cmp+0x3e>
 4c2:	08 95       	ret
 4c4:	0a 26       	eor	r0, r26
 4c6:	09 f4       	brne	.+2      	; 0x4ca <__fp_cmp+0x3e>
 4c8:	a1 40       	sbci	r26, 0x01	; 1
 4ca:	a6 95       	lsr	r26
 4cc:	8f ef       	ldi	r24, 0xFF	; 255
 4ce:	81 1d       	adc	r24, r1
 4d0:	81 1d       	adc	r24, r1
 4d2:	08 95       	ret

000004d4 <__fp_inf>:
 4d4:	97 f9       	bld	r25, 7
 4d6:	9f 67       	ori	r25, 0x7F	; 127
 4d8:	80 e8       	ldi	r24, 0x80	; 128
 4da:	70 e0       	ldi	r23, 0x00	; 0
 4dc:	60 e0       	ldi	r22, 0x00	; 0
 4de:	08 95       	ret

000004e0 <__fp_nan>:
 4e0:	9f ef       	ldi	r25, 0xFF	; 255
 4e2:	80 ec       	ldi	r24, 0xC0	; 192
 4e4:	08 95       	ret

000004e6 <__fp_pscA>:
 4e6:	00 24       	eor	r0, r0
 4e8:	0a 94       	dec	r0
 4ea:	16 16       	cp	r1, r22
 4ec:	17 06       	cpc	r1, r23
 4ee:	18 06       	cpc	r1, r24
 4f0:	09 06       	cpc	r0, r25
 4f2:	08 95       	ret

000004f4 <__fp_pscB>:
 4f4:	00 24       	eor	r0, r0
 4f6:	0a 94       	dec	r0
 4f8:	12 16       	cp	r1, r18
 4fa:	13 06       	cpc	r1, r19
 4fc:	14 06       	cpc	r1, r20
 4fe:	05 06       	cpc	r0, r21
 500:	08 95       	ret

00000502 <__fp_round>:
 502:	09 2e       	mov	r0, r25
 504:	03 94       	inc	r0
 506:	00 0c       	add	r0, r0
 508:	11 f4       	brne	.+4      	; 0x50e <__fp_round+0xc>
 50a:	88 23       	and	r24, r24
 50c:	52 f0       	brmi	.+20     	; 0x522 <__fp_round+0x20>
 50e:	bb 0f       	add	r27, r27
 510:	40 f4       	brcc	.+16     	; 0x522 <__fp_round+0x20>
 512:	bf 2b       	or	r27, r31
 514:	11 f4       	brne	.+4      	; 0x51a <__fp_round+0x18>
 516:	60 ff       	sbrs	r22, 0
 518:	04 c0       	rjmp	.+8      	; 0x522 <__fp_round+0x20>
 51a:	6f 5f       	subi	r22, 0xFF	; 255
 51c:	7f 4f       	sbci	r23, 0xFF	; 255
 51e:	8f 4f       	sbci	r24, 0xFF	; 255
 520:	9f 4f       	sbci	r25, 0xFF	; 255
 522:	08 95       	ret

00000524 <__fp_split3>:
 524:	57 fd       	sbrc	r21, 7
 526:	90 58       	subi	r25, 0x80	; 128
 528:	44 0f       	add	r20, r20
 52a:	55 1f       	adc	r21, r21
 52c:	59 f0       	breq	.+22     	; 0x544 <__fp_splitA+0x10>
 52e:	5f 3f       	cpi	r21, 0xFF	; 255
 530:	71 f0       	breq	.+28     	; 0x54e <__fp_splitA+0x1a>
 532:	47 95       	ror	r20

00000534 <__fp_splitA>:
 534:	88 0f       	add	r24, r24
 536:	97 fb       	bst	r25, 7
 538:	99 1f       	adc	r25, r25
 53a:	61 f0       	breq	.+24     	; 0x554 <__fp_splitA+0x20>
 53c:	9f 3f       	cpi	r25, 0xFF	; 255
 53e:	79 f0       	breq	.+30     	; 0x55e <__fp_splitA+0x2a>
 540:	87 95       	ror	r24
 542:	08 95       	ret
 544:	12 16       	cp	r1, r18
 546:	13 06       	cpc	r1, r19
 548:	14 06       	cpc	r1, r20
 54a:	55 1f       	adc	r21, r21
 54c:	f2 cf       	rjmp	.-28     	; 0x532 <__fp_split3+0xe>
 54e:	46 95       	lsr	r20
 550:	f1 df       	rcall	.-30     	; 0x534 <__fp_splitA>
 552:	08 c0       	rjmp	.+16     	; 0x564 <__fp_splitA+0x30>
 554:	16 16       	cp	r1, r22
 556:	17 06       	cpc	r1, r23
 558:	18 06       	cpc	r1, r24
 55a:	99 1f       	adc	r25, r25
 55c:	f1 cf       	rjmp	.-30     	; 0x540 <__fp_splitA+0xc>
 55e:	86 95       	lsr	r24
 560:	71 05       	cpc	r23, r1
 562:	61 05       	cpc	r22, r1
 564:	08 94       	sec
 566:	08 95       	ret

00000568 <__fp_zero>:
 568:	e8 94       	clt

0000056a <__fp_szero>:
 56a:	bb 27       	eor	r27, r27
 56c:	66 27       	eor	r22, r22
 56e:	77 27       	eor	r23, r23
 570:	cb 01       	movw	r24, r22
 572:	97 f9       	bld	r25, 7
 574:	08 95       	ret

00000576 <__mulsf3>:
 576:	0e 94 ce 02 	call	0x59c	; 0x59c <__mulsf3x>
 57a:	0c 94 81 02 	jmp	0x502	; 0x502 <__fp_round>
 57e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <__fp_pscA>
 582:	38 f0       	brcs	.+14     	; 0x592 <__mulsf3+0x1c>
 584:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <__fp_pscB>
 588:	20 f0       	brcs	.+8      	; 0x592 <__mulsf3+0x1c>
 58a:	95 23       	and	r25, r21
 58c:	11 f0       	breq	.+4      	; 0x592 <__mulsf3+0x1c>
 58e:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_inf>
 592:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__fp_nan>
 596:	11 24       	eor	r1, r1
 598:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_szero>

0000059c <__mulsf3x>:
 59c:	0e 94 92 02 	call	0x524	; 0x524 <__fp_split3>
 5a0:	70 f3       	brcs	.-36     	; 0x57e <__mulsf3+0x8>

000005a2 <__mulsf3_pse>:
 5a2:	95 9f       	mul	r25, r21
 5a4:	c1 f3       	breq	.-16     	; 0x596 <__mulsf3+0x20>
 5a6:	95 0f       	add	r25, r21
 5a8:	50 e0       	ldi	r21, 0x00	; 0
 5aa:	55 1f       	adc	r21, r21
 5ac:	62 9f       	mul	r22, r18
 5ae:	f0 01       	movw	r30, r0
 5b0:	72 9f       	mul	r23, r18
 5b2:	bb 27       	eor	r27, r27
 5b4:	f0 0d       	add	r31, r0
 5b6:	b1 1d       	adc	r27, r1
 5b8:	63 9f       	mul	r22, r19
 5ba:	aa 27       	eor	r26, r26
 5bc:	f0 0d       	add	r31, r0
 5be:	b1 1d       	adc	r27, r1
 5c0:	aa 1f       	adc	r26, r26
 5c2:	64 9f       	mul	r22, r20
 5c4:	66 27       	eor	r22, r22
 5c6:	b0 0d       	add	r27, r0
 5c8:	a1 1d       	adc	r26, r1
 5ca:	66 1f       	adc	r22, r22
 5cc:	82 9f       	mul	r24, r18
 5ce:	22 27       	eor	r18, r18
 5d0:	b0 0d       	add	r27, r0
 5d2:	a1 1d       	adc	r26, r1
 5d4:	62 1f       	adc	r22, r18
 5d6:	73 9f       	mul	r23, r19
 5d8:	b0 0d       	add	r27, r0
 5da:	a1 1d       	adc	r26, r1
 5dc:	62 1f       	adc	r22, r18
 5de:	83 9f       	mul	r24, r19
 5e0:	a0 0d       	add	r26, r0
 5e2:	61 1d       	adc	r22, r1
 5e4:	22 1f       	adc	r18, r18
 5e6:	74 9f       	mul	r23, r20
 5e8:	33 27       	eor	r19, r19
 5ea:	a0 0d       	add	r26, r0
 5ec:	61 1d       	adc	r22, r1
 5ee:	23 1f       	adc	r18, r19
 5f0:	84 9f       	mul	r24, r20
 5f2:	60 0d       	add	r22, r0
 5f4:	21 1d       	adc	r18, r1
 5f6:	82 2f       	mov	r24, r18
 5f8:	76 2f       	mov	r23, r22
 5fa:	6a 2f       	mov	r22, r26
 5fc:	11 24       	eor	r1, r1
 5fe:	9f 57       	subi	r25, 0x7F	; 127
 600:	50 40       	sbci	r21, 0x00	; 0
 602:	9a f0       	brmi	.+38     	; 0x62a <__mulsf3_pse+0x88>
 604:	f1 f0       	breq	.+60     	; 0x642 <__mulsf3_pse+0xa0>
 606:	88 23       	and	r24, r24
 608:	4a f0       	brmi	.+18     	; 0x61c <__mulsf3_pse+0x7a>
 60a:	ee 0f       	add	r30, r30
 60c:	ff 1f       	adc	r31, r31
 60e:	bb 1f       	adc	r27, r27
 610:	66 1f       	adc	r22, r22
 612:	77 1f       	adc	r23, r23
 614:	88 1f       	adc	r24, r24
 616:	91 50       	subi	r25, 0x01	; 1
 618:	50 40       	sbci	r21, 0x00	; 0
 61a:	a9 f7       	brne	.-22     	; 0x606 <__mulsf3_pse+0x64>
 61c:	9e 3f       	cpi	r25, 0xFE	; 254
 61e:	51 05       	cpc	r21, r1
 620:	80 f0       	brcs	.+32     	; 0x642 <__mulsf3_pse+0xa0>
 622:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_inf>
 626:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_szero>
 62a:	5f 3f       	cpi	r21, 0xFF	; 255
 62c:	e4 f3       	brlt	.-8      	; 0x626 <__mulsf3_pse+0x84>
 62e:	98 3e       	cpi	r25, 0xE8	; 232
 630:	d4 f3       	brlt	.-12     	; 0x626 <__mulsf3_pse+0x84>
 632:	86 95       	lsr	r24
 634:	77 95       	ror	r23
 636:	67 95       	ror	r22
 638:	b7 95       	ror	r27
 63a:	f7 95       	ror	r31
 63c:	e7 95       	ror	r30
 63e:	9f 5f       	subi	r25, 0xFF	; 255
 640:	c1 f7       	brne	.-16     	; 0x632 <__mulsf3_pse+0x90>
 642:	fe 2b       	or	r31, r30
 644:	88 0f       	add	r24, r24
 646:	91 1d       	adc	r25, r1
 648:	96 95       	lsr	r25
 64a:	87 95       	ror	r24
 64c:	97 f9       	bld	r25, 7
 64e:	08 95       	ret

00000650 <__divmodhi4>:
 650:	97 fb       	bst	r25, 7
 652:	07 2e       	mov	r0, r23
 654:	16 f4       	brtc	.+4      	; 0x65a <__divmodhi4+0xa>
 656:	00 94       	com	r0
 658:	07 d0       	rcall	.+14     	; 0x668 <__divmodhi4_neg1>
 65a:	77 fd       	sbrc	r23, 7
 65c:	09 d0       	rcall	.+18     	; 0x670 <__divmodhi4_neg2>
 65e:	0e 94 3c 03 	call	0x678	; 0x678 <__udivmodhi4>
 662:	07 fc       	sbrc	r0, 7
 664:	05 d0       	rcall	.+10     	; 0x670 <__divmodhi4_neg2>
 666:	3e f4       	brtc	.+14     	; 0x676 <__divmodhi4_exit>

00000668 <__divmodhi4_neg1>:
 668:	90 95       	com	r25
 66a:	81 95       	neg	r24
 66c:	9f 4f       	sbci	r25, 0xFF	; 255
 66e:	08 95       	ret

00000670 <__divmodhi4_neg2>:
 670:	70 95       	com	r23
 672:	61 95       	neg	r22
 674:	7f 4f       	sbci	r23, 0xFF	; 255

00000676 <__divmodhi4_exit>:
 676:	08 95       	ret

00000678 <__udivmodhi4>:
 678:	aa 1b       	sub	r26, r26
 67a:	bb 1b       	sub	r27, r27
 67c:	51 e1       	ldi	r21, 0x11	; 17
 67e:	07 c0       	rjmp	.+14     	; 0x68e <__udivmodhi4_ep>

00000680 <__udivmodhi4_loop>:
 680:	aa 1f       	adc	r26, r26
 682:	bb 1f       	adc	r27, r27
 684:	a6 17       	cp	r26, r22
 686:	b7 07       	cpc	r27, r23
 688:	10 f0       	brcs	.+4      	; 0x68e <__udivmodhi4_ep>
 68a:	a6 1b       	sub	r26, r22
 68c:	b7 0b       	sbc	r27, r23

0000068e <__udivmodhi4_ep>:
 68e:	88 1f       	adc	r24, r24
 690:	99 1f       	adc	r25, r25
 692:	5a 95       	dec	r21
 694:	a9 f7       	brne	.-22     	; 0x680 <__udivmodhi4_loop>
 696:	80 95       	com	r24
 698:	90 95       	com	r25
 69a:	bc 01       	movw	r22, r24
 69c:	cd 01       	movw	r24, r26
 69e:	08 95       	ret

000006a0 <malloc>:
 6a0:	0f 93       	push	r16
 6a2:	1f 93       	push	r17
 6a4:	cf 93       	push	r28
 6a6:	df 93       	push	r29
 6a8:	82 30       	cpi	r24, 0x02	; 2
 6aa:	91 05       	cpc	r25, r1
 6ac:	10 f4       	brcc	.+4      	; 0x6b2 <malloc+0x12>
 6ae:	82 e0       	ldi	r24, 0x02	; 2
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	e0 91 1e 02 	lds	r30, 0x021E	; 0x80021e <__flp>
 6b6:	f0 91 1f 02 	lds	r31, 0x021F	; 0x80021f <__flp+0x1>
 6ba:	20 e0       	ldi	r18, 0x00	; 0
 6bc:	30 e0       	ldi	r19, 0x00	; 0
 6be:	a0 e0       	ldi	r26, 0x00	; 0
 6c0:	b0 e0       	ldi	r27, 0x00	; 0
 6c2:	30 97       	sbiw	r30, 0x00	; 0
 6c4:	19 f1       	breq	.+70     	; 0x70c <malloc+0x6c>
 6c6:	40 81       	ld	r20, Z
 6c8:	51 81       	ldd	r21, Z+1	; 0x01
 6ca:	02 81       	ldd	r16, Z+2	; 0x02
 6cc:	13 81       	ldd	r17, Z+3	; 0x03
 6ce:	48 17       	cp	r20, r24
 6d0:	59 07       	cpc	r21, r25
 6d2:	c8 f0       	brcs	.+50     	; 0x706 <malloc+0x66>
 6d4:	84 17       	cp	r24, r20
 6d6:	95 07       	cpc	r25, r21
 6d8:	69 f4       	brne	.+26     	; 0x6f4 <malloc+0x54>
 6da:	10 97       	sbiw	r26, 0x00	; 0
 6dc:	31 f0       	breq	.+12     	; 0x6ea <malloc+0x4a>
 6de:	12 96       	adiw	r26, 0x02	; 2
 6e0:	0c 93       	st	X, r16
 6e2:	12 97       	sbiw	r26, 0x02	; 2
 6e4:	13 96       	adiw	r26, 0x03	; 3
 6e6:	1c 93       	st	X, r17
 6e8:	27 c0       	rjmp	.+78     	; 0x738 <malloc+0x98>
 6ea:	00 93 1e 02 	sts	0x021E, r16	; 0x80021e <__flp>
 6ee:	10 93 1f 02 	sts	0x021F, r17	; 0x80021f <__flp+0x1>
 6f2:	22 c0       	rjmp	.+68     	; 0x738 <malloc+0x98>
 6f4:	21 15       	cp	r18, r1
 6f6:	31 05       	cpc	r19, r1
 6f8:	19 f0       	breq	.+6      	; 0x700 <malloc+0x60>
 6fa:	42 17       	cp	r20, r18
 6fc:	53 07       	cpc	r21, r19
 6fe:	18 f4       	brcc	.+6      	; 0x706 <malloc+0x66>
 700:	9a 01       	movw	r18, r20
 702:	bd 01       	movw	r22, r26
 704:	ef 01       	movw	r28, r30
 706:	df 01       	movw	r26, r30
 708:	f8 01       	movw	r30, r16
 70a:	db cf       	rjmp	.-74     	; 0x6c2 <malloc+0x22>
 70c:	21 15       	cp	r18, r1
 70e:	31 05       	cpc	r19, r1
 710:	f9 f0       	breq	.+62     	; 0x750 <malloc+0xb0>
 712:	28 1b       	sub	r18, r24
 714:	39 0b       	sbc	r19, r25
 716:	24 30       	cpi	r18, 0x04	; 4
 718:	31 05       	cpc	r19, r1
 71a:	80 f4       	brcc	.+32     	; 0x73c <malloc+0x9c>
 71c:	8a 81       	ldd	r24, Y+2	; 0x02
 71e:	9b 81       	ldd	r25, Y+3	; 0x03
 720:	61 15       	cp	r22, r1
 722:	71 05       	cpc	r23, r1
 724:	21 f0       	breq	.+8      	; 0x72e <malloc+0x8e>
 726:	fb 01       	movw	r30, r22
 728:	93 83       	std	Z+3, r25	; 0x03
 72a:	82 83       	std	Z+2, r24	; 0x02
 72c:	04 c0       	rjmp	.+8      	; 0x736 <malloc+0x96>
 72e:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <__flp+0x1>
 732:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <__flp>
 736:	fe 01       	movw	r30, r28
 738:	32 96       	adiw	r30, 0x02	; 2
 73a:	44 c0       	rjmp	.+136    	; 0x7c4 <malloc+0x124>
 73c:	fe 01       	movw	r30, r28
 73e:	e2 0f       	add	r30, r18
 740:	f3 1f       	adc	r31, r19
 742:	81 93       	st	Z+, r24
 744:	91 93       	st	Z+, r25
 746:	22 50       	subi	r18, 0x02	; 2
 748:	31 09       	sbc	r19, r1
 74a:	39 83       	std	Y+1, r19	; 0x01
 74c:	28 83       	st	Y, r18
 74e:	3a c0       	rjmp	.+116    	; 0x7c4 <malloc+0x124>
 750:	20 91 1c 02 	lds	r18, 0x021C	; 0x80021c <__brkval>
 754:	30 91 1d 02 	lds	r19, 0x021D	; 0x80021d <__brkval+0x1>
 758:	23 2b       	or	r18, r19
 75a:	41 f4       	brne	.+16     	; 0x76c <malloc+0xcc>
 75c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
 760:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
 764:	30 93 1d 02 	sts	0x021D, r19	; 0x80021d <__brkval+0x1>
 768:	20 93 1c 02 	sts	0x021C, r18	; 0x80021c <__brkval>
 76c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 770:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 774:	21 15       	cp	r18, r1
 776:	31 05       	cpc	r19, r1
 778:	41 f4       	brne	.+16     	; 0x78a <malloc+0xea>
 77a:	2d b7       	in	r18, 0x3d	; 61
 77c:	3e b7       	in	r19, 0x3e	; 62
 77e:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
 782:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
 786:	24 1b       	sub	r18, r20
 788:	35 0b       	sbc	r19, r21
 78a:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <__brkval>
 78e:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <__brkval+0x1>
 792:	e2 17       	cp	r30, r18
 794:	f3 07       	cpc	r31, r19
 796:	a0 f4       	brcc	.+40     	; 0x7c0 <malloc+0x120>
 798:	2e 1b       	sub	r18, r30
 79a:	3f 0b       	sbc	r19, r31
 79c:	28 17       	cp	r18, r24
 79e:	39 07       	cpc	r19, r25
 7a0:	78 f0       	brcs	.+30     	; 0x7c0 <malloc+0x120>
 7a2:	ac 01       	movw	r20, r24
 7a4:	4e 5f       	subi	r20, 0xFE	; 254
 7a6:	5f 4f       	sbci	r21, 0xFF	; 255
 7a8:	24 17       	cp	r18, r20
 7aa:	35 07       	cpc	r19, r21
 7ac:	48 f0       	brcs	.+18     	; 0x7c0 <malloc+0x120>
 7ae:	4e 0f       	add	r20, r30
 7b0:	5f 1f       	adc	r21, r31
 7b2:	50 93 1d 02 	sts	0x021D, r21	; 0x80021d <__brkval+0x1>
 7b6:	40 93 1c 02 	sts	0x021C, r20	; 0x80021c <__brkval>
 7ba:	81 93       	st	Z+, r24
 7bc:	91 93       	st	Z+, r25
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <malloc+0x124>
 7c0:	e0 e0       	ldi	r30, 0x00	; 0
 7c2:	f0 e0       	ldi	r31, 0x00	; 0
 7c4:	cf 01       	movw	r24, r30
 7c6:	df 91       	pop	r29
 7c8:	cf 91       	pop	r28
 7ca:	1f 91       	pop	r17
 7cc:	0f 91       	pop	r16
 7ce:	08 95       	ret

000007d0 <free>:
 7d0:	cf 93       	push	r28
 7d2:	df 93       	push	r29
 7d4:	00 97       	sbiw	r24, 0x00	; 0
 7d6:	09 f4       	brne	.+2      	; 0x7da <free+0xa>
 7d8:	81 c0       	rjmp	.+258    	; 0x8dc <free+0x10c>
 7da:	fc 01       	movw	r30, r24
 7dc:	32 97       	sbiw	r30, 0x02	; 2
 7de:	13 82       	std	Z+3, r1	; 0x03
 7e0:	12 82       	std	Z+2, r1	; 0x02
 7e2:	a0 91 1e 02 	lds	r26, 0x021E	; 0x80021e <__flp>
 7e6:	b0 91 1f 02 	lds	r27, 0x021F	; 0x80021f <__flp+0x1>
 7ea:	10 97       	sbiw	r26, 0x00	; 0
 7ec:	81 f4       	brne	.+32     	; 0x80e <free+0x3e>
 7ee:	20 81       	ld	r18, Z
 7f0:	31 81       	ldd	r19, Z+1	; 0x01
 7f2:	82 0f       	add	r24, r18
 7f4:	93 1f       	adc	r25, r19
 7f6:	20 91 1c 02 	lds	r18, 0x021C	; 0x80021c <__brkval>
 7fa:	30 91 1d 02 	lds	r19, 0x021D	; 0x80021d <__brkval+0x1>
 7fe:	28 17       	cp	r18, r24
 800:	39 07       	cpc	r19, r25
 802:	51 f5       	brne	.+84     	; 0x858 <free+0x88>
 804:	f0 93 1d 02 	sts	0x021D, r31	; 0x80021d <__brkval+0x1>
 808:	e0 93 1c 02 	sts	0x021C, r30	; 0x80021c <__brkval>
 80c:	67 c0       	rjmp	.+206    	; 0x8dc <free+0x10c>
 80e:	ed 01       	movw	r28, r26
 810:	20 e0       	ldi	r18, 0x00	; 0
 812:	30 e0       	ldi	r19, 0x00	; 0
 814:	ce 17       	cp	r28, r30
 816:	df 07       	cpc	r29, r31
 818:	40 f4       	brcc	.+16     	; 0x82a <free+0x5a>
 81a:	4a 81       	ldd	r20, Y+2	; 0x02
 81c:	5b 81       	ldd	r21, Y+3	; 0x03
 81e:	9e 01       	movw	r18, r28
 820:	41 15       	cp	r20, r1
 822:	51 05       	cpc	r21, r1
 824:	f1 f0       	breq	.+60     	; 0x862 <free+0x92>
 826:	ea 01       	movw	r28, r20
 828:	f5 cf       	rjmp	.-22     	; 0x814 <free+0x44>
 82a:	d3 83       	std	Z+3, r29	; 0x03
 82c:	c2 83       	std	Z+2, r28	; 0x02
 82e:	40 81       	ld	r20, Z
 830:	51 81       	ldd	r21, Z+1	; 0x01
 832:	84 0f       	add	r24, r20
 834:	95 1f       	adc	r25, r21
 836:	c8 17       	cp	r28, r24
 838:	d9 07       	cpc	r29, r25
 83a:	59 f4       	brne	.+22     	; 0x852 <free+0x82>
 83c:	88 81       	ld	r24, Y
 83e:	99 81       	ldd	r25, Y+1	; 0x01
 840:	84 0f       	add	r24, r20
 842:	95 1f       	adc	r25, r21
 844:	02 96       	adiw	r24, 0x02	; 2
 846:	91 83       	std	Z+1, r25	; 0x01
 848:	80 83       	st	Z, r24
 84a:	8a 81       	ldd	r24, Y+2	; 0x02
 84c:	9b 81       	ldd	r25, Y+3	; 0x03
 84e:	93 83       	std	Z+3, r25	; 0x03
 850:	82 83       	std	Z+2, r24	; 0x02
 852:	21 15       	cp	r18, r1
 854:	31 05       	cpc	r19, r1
 856:	29 f4       	brne	.+10     	; 0x862 <free+0x92>
 858:	f0 93 1f 02 	sts	0x021F, r31	; 0x80021f <__flp+0x1>
 85c:	e0 93 1e 02 	sts	0x021E, r30	; 0x80021e <__flp>
 860:	3d c0       	rjmp	.+122    	; 0x8dc <free+0x10c>
 862:	e9 01       	movw	r28, r18
 864:	fb 83       	std	Y+3, r31	; 0x03
 866:	ea 83       	std	Y+2, r30	; 0x02
 868:	49 91       	ld	r20, Y+
 86a:	59 91       	ld	r21, Y+
 86c:	c4 0f       	add	r28, r20
 86e:	d5 1f       	adc	r29, r21
 870:	ec 17       	cp	r30, r28
 872:	fd 07       	cpc	r31, r29
 874:	61 f4       	brne	.+24     	; 0x88e <free+0xbe>
 876:	80 81       	ld	r24, Z
 878:	91 81       	ldd	r25, Z+1	; 0x01
 87a:	84 0f       	add	r24, r20
 87c:	95 1f       	adc	r25, r21
 87e:	02 96       	adiw	r24, 0x02	; 2
 880:	e9 01       	movw	r28, r18
 882:	99 83       	std	Y+1, r25	; 0x01
 884:	88 83       	st	Y, r24
 886:	82 81       	ldd	r24, Z+2	; 0x02
 888:	93 81       	ldd	r25, Z+3	; 0x03
 88a:	9b 83       	std	Y+3, r25	; 0x03
 88c:	8a 83       	std	Y+2, r24	; 0x02
 88e:	e0 e0       	ldi	r30, 0x00	; 0
 890:	f0 e0       	ldi	r31, 0x00	; 0
 892:	12 96       	adiw	r26, 0x02	; 2
 894:	8d 91       	ld	r24, X+
 896:	9c 91       	ld	r25, X
 898:	13 97       	sbiw	r26, 0x03	; 3
 89a:	00 97       	sbiw	r24, 0x00	; 0
 89c:	19 f0       	breq	.+6      	; 0x8a4 <free+0xd4>
 89e:	fd 01       	movw	r30, r26
 8a0:	dc 01       	movw	r26, r24
 8a2:	f7 cf       	rjmp	.-18     	; 0x892 <free+0xc2>
 8a4:	8d 91       	ld	r24, X+
 8a6:	9c 91       	ld	r25, X
 8a8:	11 97       	sbiw	r26, 0x01	; 1
 8aa:	9d 01       	movw	r18, r26
 8ac:	2e 5f       	subi	r18, 0xFE	; 254
 8ae:	3f 4f       	sbci	r19, 0xFF	; 255
 8b0:	82 0f       	add	r24, r18
 8b2:	93 1f       	adc	r25, r19
 8b4:	20 91 1c 02 	lds	r18, 0x021C	; 0x80021c <__brkval>
 8b8:	30 91 1d 02 	lds	r19, 0x021D	; 0x80021d <__brkval+0x1>
 8bc:	28 17       	cp	r18, r24
 8be:	39 07       	cpc	r19, r25
 8c0:	69 f4       	brne	.+26     	; 0x8dc <free+0x10c>
 8c2:	30 97       	sbiw	r30, 0x00	; 0
 8c4:	29 f4       	brne	.+10     	; 0x8d0 <free+0x100>
 8c6:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <__flp+0x1>
 8ca:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <__flp>
 8ce:	02 c0       	rjmp	.+4      	; 0x8d4 <free+0x104>
 8d0:	13 82       	std	Z+3, r1	; 0x03
 8d2:	12 82       	std	Z+2, r1	; 0x02
 8d4:	b0 93 1d 02 	sts	0x021D, r27	; 0x80021d <__brkval+0x1>
 8d8:	a0 93 1c 02 	sts	0x021C, r26	; 0x80021c <__brkval>
 8dc:	df 91       	pop	r29
 8de:	cf 91       	pop	r28
 8e0:	08 95       	ret

000008e2 <_exit>:
 8e2:	f8 94       	cli

000008e4 <__stop_program>:
 8e4:	ff cf       	rjmp	.-2      	; 0x8e4 <__stop_program>
